name: "Build and Release"

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: "Windows x64"
            runner: "windows-latest"
            target: "x86_64-pc-windows-msvc"
            ext: ".exe"
          - name: "macOS Intel"
            runner: "macos-latest"
            target: "x86_64-apple-darwin"
            ext: ""
          - name: "macOS Apple Silicon"
            runner: "macos-latest"
            target: "aarch64-apple-darwin"
            ext: ""
          - name: "Linux x64"
            runner: "ubuntu-latest"
            target: "x86_64-unknown-linux-gnu"
            ext: ""

    runs-on: ${{ matrix.platform.runner }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install Linux dependencies
        if: matrix.platform.runner == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm install

      - name: Build Tauri app
        run: npm run build -- --target ${{ matrix.platform.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: |
            src-tauri/target/${{ matrix.platform.target }}/release/bundle/**/*

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/*.dmg
            **/*.app.tar.gz
            **/*.deb
            **/*.AppImage
            **/*.msi
            **/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}